scopeName: 'source.roll20-macro'
name: 'Roll20 macro'
fileTypes: [ 'roll20' ]
patterns: [
	{ include: '#attribute' }
	{ include: '#ability' }
	{ include: '#htmlOrMacro' }
	{ include: '#query' }
	{ include: '#inlineRoll' }
	{ include: '#templateSelector' }
	{ include: '#property' }
	{ include: '#button' }
]
repository:
	attribute: {
		name: 'meta.attribute.roll20-macro'
		patterns: [
			{
				name: 'string.interpolated.attribute.token.roll20-macro'
				match: '@\\{(selected|target)\\|([^|}]+)(?:\\|(max))?\\}'
				captures:
					1: name: 'keyword.other.token.roll20-macro'
					2: name: 'entity.name.attribute.roll20-macro'
					3: name: 'keyword.other.attribute-max.roll20-macro'
			}
			{
				name: 'string.interpolated.attribute.character.roll20-macro'
				match: '@\\{([^|}]+)\\|(?!max\\})([^|}]+)(?:\\|(max))?\\}'
				captures:
					1: name: 'entity.name.character.roll20-macro'
					2: name: 'entity.name.attribute.roll20-macro'
					3: name: 'keyword.other.attribute-max.roll20-macro'
			}
			{
				name: 'string.interpolated.attribute.roll20-macro'
				match: '@\\{([^|}]+)(?:\\|(max))?\\}'
				captures:
					1: name: 'entity.name.attribute.roll20-macro'
					2: name: 'keyword.other.attribute-max.roll20-macro'
			}
		]
	}
	ability: {
		name: 'meta.ability.roll20-macro'
		patterns: [
			{
				name: 'string.interpolated.ability.roll20-macro'
				match: '%\\{((?:[^@|}]+|@(?!\\{)|@\\{[^}]+\\})+)\\|((?:[^@|}]+|@(?!\\{)|@\\{[^}]+\\})+)\\}'
				captures:
					1:
						name: 'entity.name.character.roll20-macro'
						patterns: [{ include: '#attribute' }]	#notably: @{character_name}
					2:
						name: 'entity.name.ability.roll20-macro'
						patterns: [{ include: '#attribute' }]
			}
		]
	}
	htmlOrMacro: {
		match: '&#\\d+;|(#[^\\s#]+)(?=\\s|$)'
		captures:
			1: patterns: [{ include: '#macro' }]
	}
	macro: {
		name: 'meta.macro.roll20-macro'
		patterns: [
			{
				name: 'string.interpolated.macro.roll20-macro'
				match: '#([^\\s#]+)(?:\\s|$)'
				captures:
					1: name: 'entity.name.macro.roll20-macro'
			}
		]
	}
	query: {
		name: 'meta.query.roll20-macro'
		patterns: [
			{
				name: 'variable.other.query.roll20-macro'
				match: '(?x)
						\\?\\{
							(?>([^|}]*))
							(?>
								\\|
								((?:[^@|}]+|@(?!\\{)|@\\{[^}]+\\})*)
							)
						\\}'
				captures:
					1: name: 'string.unquoted.prompt.roll20-macro'
					2:
						name: 'string.unquoted.default.roll20-macro'
						patterns: [
							{ include: '#attribute' }
							{ include: '#htmlOrMacro' }
							{ include: '#button' }
						]
			}
			{
				name: 'variable.other.query.roll20-macro'
				match: '(?x)
						\\?\\{
						(?>([^|}]*))
						(?>(
							(?:
								\\|
								(?:[^@,|}]+|@(?!\\{)|@\\{[^}]+\\})*
								(?:
									,
									(?:[^@|}]+|@(?!\\{)|@\\{[^}]+\\})*
								)?
							)+
						))
						\\}'
				captures:
					1: name: 'string.unquoted.prompt.roll20-macro'
					2:
						patterns: [
							{
								match: '(?x)
										(\\|)
										(
											((?:[^@,|]+|@(?!\\{)|@\\{[^}]+\\})*)
											(?:
												(,)
												((?:[^@|]+|@(?!\\{)|@\\{[^}]+\\})*)
											)?
										)'
								captures:
									1:
										name: 'punctuation.definition.query-option.delimiter.roll20-macro'
									2:
										name: 'entity.other.option.roll20-macro'
									3:
										name: 'string.unquoted.label.roll20-macro'
										patterns: [{ include: '#attribute' }]
									4:
										name: 'punctuation.definition.query-option.comma.roll20-macro'
									5:
										name: 'string.unquoted.value.roll20-macro'
										patterns: [
											{ include: '#attribute' }
											{ include: '#htmlOrMacro' }
											{ include: '#button' }
											{
												name: 'invalid.roll20-macro'
												match: ','
											}
										]
							}
						]
			}
		]
	}
	inlineRoll: {
		name: 'meta.inline-roll.roll20-macro'
		begin: '\\[\\['
		end: '\\]\\]'
		patterns: [{ include: '#inlineMath' }]
	}
	inlineMath: {
		patterns: [
			{ include: '#attribute' }
			{ include: '#ability' }
			{ include: '#htmlOrMacro' }
			{ include: '#query' }
			{ include: '#inlineRoll' }
			{ include: '#dice' }
			{ include: '#groupRoll' }
			{
				name: 'string.quoted.other.inline-label.roll20-macro'
				match: '\\[(?!\\[)([^\\]]*)\\]'
				captures:
					1:
						patterns: [
							{ include: '#attribute' }
							{ include: '#ability' }
							{ include: '#htmlOrMacro' }
							{ include: '#query' }
						]
			}
			{
				name: 'constant.numeric.roll20-macro'
				match: '\\d+(?:\\.\\d*)?|\\.\\d+'
			}
			{
				name: 'keyword.operator.roll20-macro'
				match: '\\*\\*|[+*/%-]'
			}
			{
				begin: '(?:abs|ceil|floor|round)?\\('
				end: '\\)'
				patterns: [{ include: '#inlineMath' }]
			}
		]
	}
	dice: {
		name: 'constant.other.dice.roll20-macro'
		match: '(?i)\\d*d(?:\\d+|f)(?:ro?[<=>]?\\d+|![!p]?(?:[<=>]?\\d+)?|[kd][hl]?\\d+|[<=>]\\d+(?:f[<=>]?\\d+)?|c[sf][<=>]?\\d+|mt?\\d*(?:[<=>]\\d+)?|s[ad])*'
	}
	groupRoll: {
		name: 'constant.other.group-roll.roll20-macro'
		patterns: [
			{
				begin: '\\{'
				end: '\\}(?:[kd][hl]?\\d+|[<=>]\\d+(?:f[<=>]?\\d+)?|)*'
				patterns: [
					{ include: '#inlineRoll' }
					{ include: '#inlineMath' }
					{
						begin: ','
						end: '(?=[,}])'
						patterns: [
							{ include: '#inlineRoll' }
							{ include: '#inlineMath' }
						]
					}
				]
			}
		]
	}
	templateSelector: {
		name: 'meta.template-selector.roll20-macro'
		match: '&\\{template:([^}]+)\\}'
		captures:
			1: name: 'entity.name.template.roll20-macro'
	}
	property: {
		name: 'meta.property.roll20-macro'
		match: '\\{\\{((?:[^=@%|}]+|[@%](?!\\{)|[@%]\\{[^}]+\\})*)(?:=((?:[^@%}]|[@%](?!\\{)|[@%]\\{[^}]+\\}|\\}(?!\\}))*))?\\}\\}'
		captures:
			1:
				name: 'entity.name.property.roll20-macro'
				patterns: [
					{ include: '#attribute' }
					{ include: '#ability' }
					{ include: '#htmlOrMacro' }
					{ include: '#query' }
					{ include: '#inlineRoll' }
				]
			2:
				name: 'string.unquoted.value.roll20-macro'
				patterns: [
					{ include: '#attribute' }
					{ include: '#ability' }
					{ include: '#htmlOrMacro' }
					{ include: '#query' }
					{ include: '#inlineRoll' }
					{ include: '#button' }
				]
	}
	button: {
		name: 'meta.button.roll20-macro'
		match: '\\[(?!\\[)([^\\]]*)\\]\\(~(?:((?:[^@|}]+|@(?!\\{)|@\\{[^}]+\\})+)\\|)?((?:[^@|}]+|@(?!\\{)|@\\{[^}]+\\})+)\\)'
		captures:
			1:
				name: 'entity.name.button.roll20-macro'
				patterns: [
					{ include: '#attribute' }
					{ include: '#ability' }
					{ include: '#htmlOrMacro' }
					{ include: '#query' }
				]
			2:
				name: 'entity.name.character.roll20-macro'
				patterns: [{ include: '#attribute' }]	#notably: @{character_name}
			3:
				name: 'entity.name.ability.roll20-macro'
				patterns: [{ include: '#attribute' }]
	}
